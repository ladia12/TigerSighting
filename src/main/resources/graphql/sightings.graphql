scalar LocalDate
scalar LocalDateTime

type Tiger {
    id: ID!
    name: String!
    dateOfBirth: LocalDate!
    lastSeenTimestamp: LocalDateTime!
    lastSeenLatitude: Float!
    lastSeenLongitude: Float!
}

type Sighting {
    id: ID!
    tiger: Tiger!
    timestamp: LocalDateTime!
    latitude: Float!
    longitude: Float!
    image: String
}

type Query {
    allTigers(page: Int!, size: Int!): [Tiger!]!
    allSightings(tigerId: ID!, page: Int!, size: Int!): [Sighting!]!
}

type Mutation {
    createTiger(tigerInput: TigerInput!): Tiger!
    createSighting(sightingInput: SightingInput!): CreateSightingResponse!
}

type CreateSightingResponse {
    sighting: Sighting
    errorMessage: String
}

input TigerInput {
    name: String!
    dateOfBirth: String!
    lastSeenTimestamp: String!
    lastSeenLatitude: Float!
    lastSeenLongitude: Float!
}

input SightingInput {
    tigerId: ID!
    timestamp: String!
    latitude: Float!
    longitude: Float!
    image: String
}
